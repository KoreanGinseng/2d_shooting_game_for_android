/******************************************************************************/
/*! @file       GameApplication.h
    @brief      ゲームアプリケーションクラス定義ファイル
*******************************************************************************/

#ifndef GAMEAPPLICATION_H
#define GAMEAPPLICATION_H

#include "Common.h"
#include "GameScene.h"
#include "SceneManager.h"
#include "TitleScene.h"
#include "ClearScene.h"
#include "OverScene.h"

namespace Shooting2D
{
    /******************************************************************************/
    /*! @class CGameApplication
        @brief  ゲームアプリケーションクラス
    *******************************************************************************/
    class CGameApplication
    {
    private:

        /*! シーン */
        std::shared_ptr<CSceneManager> m_SceneManager { nullptr };

    public:

        /******************************************************************************/
        /*! コンストラクタ
        *******************************************************************************/
        explicit CGameApplication() = default;

        /******************************************************************************/
        /*! デストラクタ
        *******************************************************************************/
        virtual ~CGameApplication() = default;

        /******************************************************************************/
        /*! アプリケーションの初期化
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        MyS32 Initialize();

        /******************************************************************************/
        /*! アプリケーションの更新
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        MyS32 Update();

        /******************************************************************************/
        /*! アプリケーションの描画
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        MyS32 Draw();

        /******************************************************************************/
        /*! アプリケーションの解放
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        MyS32 Release();
    };
}

#endif //GAMEAPPLICATION_H
