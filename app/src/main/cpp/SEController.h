/******************************************************************************/
/*! @file       SEController.h
    @brief      SEコントローラークラス定義ファイル
*******************************************************************************/

#ifndef SECONTROLLER_H
#define SECONTROLLER_H

#include <memory>
#include "Common.h"

namespace Shooting2D
{
    /******************************************************************************/
    /*! @class ISEController
        @brief  SEコントローラークラス
    *******************************************************************************/
    template < typename Key >
    class ISEController
    {
    public:
        /******************************************************************************/
        /*! デストラクタ
        *******************************************************************************/
        virtual ~ISEController() = default;

        /******************************************************************************/
        /*! 読み込み
            @param[in]      id          登録キー
            @param[in]      fileName    ファイルパス
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        virtual MyS32 Load(RKMy(Key) id, LPKMyS8 fileName) = 0;

        /******************************************************************************/
        /*! 再生
            @param[in]      id          登録キー
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        virtual MyS32 Play(RKMy(Key) id) = 0;

        /******************************************************************************/
        /*! 音量の設定
            @param[in]      vol          設定値
        *******************************************************************************/
        virtual MyVoid SetVolume(MyFloat vol) = 0;
    };

    /*! ポインタ置き換え */
    template < typename Key >
    using SEControllerPtr = std::shared_ptr<ISEController<Key>>;
}

#endif //SECONTROLLER_H
