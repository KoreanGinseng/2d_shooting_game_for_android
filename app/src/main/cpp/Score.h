/******************************************************************************/
/*! @file       Score.h
    @brief      スコアクラス定義ファイル
*******************************************************************************/

#ifndef SCORE_H
#define SCORE_H

#include "GameDefine.h"

namespace Shooting2D
{
    /******************************************************************************/
    /*! @class CScore
        @brief  スコアクラス
    *******************************************************************************/
    class CScore
    {
    private:
        /*! スコア */
        MyS32 m_Score;

    public:
        /******************************************************************************/
        /*! コンストラクタ
        *******************************************************************************/
        CScore()
            : m_Score(0)
        {
        }

        /******************************************************************************/
        /*! デストラクタ
        *******************************************************************************/
        ~CScore() = default;

        /******************************************************************************/
        /*! リセット
        *******************************************************************************/
        MyVoid Reset() noexcept
        {
            m_Score = 0;
        }

        /******************************************************************************/
        /*! 加算
            @param[in]      value          加算値
        *******************************************************************************/
        MyVoid Add(MyS32 value) noexcept
        {
            m_Score += value;
        }

        /******************************************************************************/
        /*! スコアの取得
            @return         スコア
        *******************************************************************************/
        const MyS32 Get() const noexcept
        {
            return m_Score;
        }
    };
    /*! ポインタ置き換え */
    using ScorePtr = std::shared_ptr<CScore>;
}

#endif //SCORE_H
