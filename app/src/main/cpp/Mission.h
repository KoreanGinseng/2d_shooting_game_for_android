/******************************************************************************/
/*! @file       Mission.h
    @brief      ミッションクラス定義ファイル
*******************************************************************************/

#ifndef MISSION_H
#define MISSION_H

#include <memory>
#include "Common.h"

namespace Shooting2D
{
    /******************************************************************************/
    /*! @class IMission
        @brief  ミッションクラス
    *******************************************************************************/
    class IMission
    {
    public:
        /******************************************************************************/
        /*! デストラクタ
        *******************************************************************************/
        virtual ~IMission() = default;

        /******************************************************************************/
        /*! 成功フラグの取得
            @return         成功フラグ
        *******************************************************************************/
        virtual MyBool IsSuccessed() const noexcept = 0;

        /******************************************************************************/
        /*! 失敗フラグの取得
            @return         失敗フラグ
        *******************************************************************************/
        virtual MyBool IsFailed() const noexcept = 0;
    };
    /*! ポインタ置き換え */
    using MissionPtr = std::shared_ptr<IMission>;

    /******************************************************************************/
    /*! @class CMission
        @brief  ミッションクラス
    *******************************************************************************/
    template < class Successed, class Failed >
    class CMission : public IMission
    {
    private:

        /*! 成功フラグ */
        std::shared_ptr< Successed > m_SuccessedFlag;

        /*! 失敗フラグ */
        std::shared_ptr< Failed >    m_FailedFlag;

    public:

        /******************************************************************************/
        /*! コンストラクタ
        *******************************************************************************/
        CMission()
            : m_SuccessedFlag(std::make_shared<Successed>())
            , m_FailedFlag(std::make_shared<Failed>())
        {
        }

        /******************************************************************************/
        /*! 成功フラグの取得
            @return         成功フラグ
        *******************************************************************************/
        virtual MyBool IsSuccessed() const noexcept override
        {
            return m_SuccessedFlag->IsValid();
        }

        /******************************************************************************/
        /*! 失敗フラグの取得
            @return         失敗フラグ
        *******************************************************************************/
        virtual MyBool IsFailed() const noexcept override
        {
            return m_FailedFlag->IsValid();
        }
    };
}

#endif //MISSION_H
