/******************************************************************************/
/*! @file       Enemy.h
    @brief      敵クラス定義ファイル
*******************************************************************************/

#ifndef ENEMY_H
#define ENEMY_H

#include "GameObject.h"
#include "TurretCreator.h"
#include "MoveCreator.h"

namespace Shooting2D
{

    /******************************************************************************/
    /*! @class CEnemy
        @brief  敵クラス
    *******************************************************************************/
    class CEnemy : public CGameObject
    {
    private:
        /*! 体力 */
        MyS32   m_HP;

        /*! 向き */
        MyFloat m_Angle;

        /*! 利用する画像ID */
        MyInt   m_Image;

        /*! 砲台 */
        TurretPtr m_Turret;

        /*! 移動 */
        MovePtr m_Move;

    public:
        /******************************************************************************/
        /*! コンストラクタ
        *******************************************************************************/
        CEnemy();

        /******************************************************************************/
        /*! デストラクタ
        *******************************************************************************/
        virtual ~CEnemy() override;

        /******************************************************************************/
        /*! 初期化
            @param[in]      px     初期座標X
            @param[in]      py     初期座標Y
            @param[in]      img    画像ID
            @param[in]      tcp    砲台生成機
            @param[in]      mcp    移動生成機
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        MyS32 Initialize(MyFloat px, MyFloat py, MyInt img, TurretCreatorPtr tcp, MoveCreatorPtr mcp);

        /******************************************************************************/
        /*! 更新
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        MyS32 Update() override;

        /******************************************************************************/
        /*! 描画
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        MyS32 Draw() override;

        /******************************************************************************/
        /*! ダメージ処理
            @param[in]      dmg    ダメージ
        *******************************************************************************/
        MyVoid Damage(MyS32 dmg);

        /******************************************************************************/
        /*! 体力の取得
            @return         体力
        *******************************************************************************/
        MyS32 GetHP() const noexcept
        {
            return m_HP;
        }
    };

    /*! ポインタ置き換え */
    using EnemyPtr  = std::shared_ptr<CEnemy>;
    using EnemyList = std::list<EnemyPtr>;
}

#endif //ENEMY_H
