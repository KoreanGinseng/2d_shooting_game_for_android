/******************************************************************************/
/*! @file       Move.h
    @brief      移動クラス定義ファイル
*******************************************************************************/

#ifndef MOVE_H
#define MOVE_H

#include <memory>
#include "Common.h"

namespace Shooting2D
{
    /******************************************************************************/
    /*! @class IMove
        @brief  移動クラス
    *******************************************************************************/
    class IMove
    {
    public:
        /******************************************************************************/
        /*! デストラクタ
        *******************************************************************************/
        virtual ~IMove() = default;

        /******************************************************************************/
        /*! 更新
            @param[in,out]  px    移動させる座標X
            @param[in,out]  py    移動させる座標Y
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        virtual MyS32 Update(MyFloat& px, MyFloat& py) = 0;

        /******************************************************************************/
        /*! 移動速度Xの取得
            @return         移動速度X
        *******************************************************************************/
        virtual const MyFloat GetSpeedX() const noexcept = 0;

        /******************************************************************************/
        /*! 移動速度Yの取得
            @return         移動速度Y
        *******************************************************************************/
        virtual const MyFloat GetSpeedY() const noexcept = 0;
    };
    /*! ポインタ置き換え */
    using MovePtr = std::shared_ptr<IMove>;
}

#endif //MOVE_H
