/******************************************************************************/
/*! @file       Animator.h
    @brief      アニメータークラス定義ファイル
*******************************************************************************/

#ifndef ANIMATOR_H
#define ANIMATOR_H

#include "AnimationList.h"

namespace Shooting2D
{
    /******************************************************************************/
    /*! @class CAnimator
        @brief  アニメータークラス
    *******************************************************************************/
    class CAnimator
    {
    protected:

        /*! アニメーションリスト */
        AnimationListPtr m_AnimationList;

        /*! アニメーション実行情報 */
        MyS32 m_CurrentAnimationNo;
        MyS32 m_CurrentFrame;
        MyS32 m_Wait;

        /*! 実行中のアニメーションポインタ */
        AnimationPtr m_CurrentAnimation;

        /*! 現在の画像 */
        MyInt m_CurrentImage;

    public:

        /******************************************************************************/
        /*! コンストラクタ
            @param[in]      list    管理するアニメーションリストポインタ
        *******************************************************************************/
        explicit CAnimator(AnimationListPtr list);

        /******************************************************************************/
        /*! デストラクタ
        *******************************************************************************/
        ~CAnimator();

        /******************************************************************************/
        /*! アニメーションの変更
            @param[in]      no       変更する番号
            @param[in]      bSame    同一上書き再生フラグ
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        MyS32 Change(MyS32 no, MyBool bSame);

        /******************************************************************************/
        /*! アニメーションの更新
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        MyS32 Update();

        /******************************************************************************/
        /*! 現在のイメージ取得
            @return         現在のイメージID
        *******************************************************************************/
        MyInt GetCurrentImage() const noexcept
        {
            return m_CurrentImage;
        }

        /******************************************************************************/
        /*! アニメーション終了フラグの取得
            @return         アニメーション終了フラグ
        *******************************************************************************/
        MyBool IsAnimationEnd() const noexcept
        {
            return m_CurrentFrame >= m_CurrentAnimation->GetFrameCount();
        }
    };

    /*! ポインタ置き換え */
    using AnimatorPtr = std::shared_ptr<CAnimator>;
}

#endif //ANIMATOR_H
