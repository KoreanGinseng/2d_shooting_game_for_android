/******************************************************************************/
/*! @file       IScene.h
    @brief      シーンインターフェース定義ファイル
*******************************************************************************/
#ifndef SCENE_H
#define SCENE_H

#include "Common.h"
#include <cassert>
#include <memory>
#include <string>

namespace Shooting2D
{
    /******************************************************************************/
    /*! @class IScene
        @brief  シーンインターフェース
    *******************************************************************************/
    class IScene
    {
    public:

        /******************************************************************************/
        /*! シーンの読み込み
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        virtual MyS32 Load() = 0;

        /******************************************************************************/
        /*! シーンの初期化
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        virtual MyS32 Initialize() = 0;

        /******************************************************************************/
        /*! シーンの更新
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        virtual MyS32 Update() = 0;

        /******************************************************************************/
        /*! シーンの描画
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        virtual MyS32 Draw() = 0;

        /******************************************************************************/
        /*! シーンの解放
            @return         成功 k_Success, 失敗 それ以外
        *******************************************************************************/
        virtual MyS32 Release() = 0;
    };

    /*! ポインタ名の置き換え */
    using ScenePtr = std::shared_ptr<IScene>;
    using SceneKey = std::string;

}


#endif //SCENE_H
